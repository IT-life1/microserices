apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deploy
  labels:
    app: auth-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-app
  template:
    metadata:
      labels:
        app: auth-app
    spec:
      # Define all volumes in a single section
      volumes:
      - name: init-scripts
        emptyDir: {}
      - name: init-scripts-source
        configMap:
          name: init-scripts-configmap

      # Init Container to copy init.sql into the shared volume
      initContainers:
      - name: init-db
        image: busybox
        command: ['sh', '-c', 'cp /init.sql /docker-entrypoint-initdb.d/init.sql']
        volumeMounts:
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        - name: init-scripts-source
          mountPath: /init.sql
          subPath: init.sql

      # Main PostgreSQL container
      containers:
      - name: postgres
        image: postgres:latest
        envFrom:
        - secretRef:
            name: postgres-secret
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # livenessProbe:
        #   tcpSocket:
        #     port: 5432
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        # readinessProbe:
        #   exec:
        #     command:
        #     - pg_isready
        #     - -h
        #     - localhost
        #     - -U
        #     - postgres
        #   initialDelaySeconds: 5
        #   periodSeconds: 10